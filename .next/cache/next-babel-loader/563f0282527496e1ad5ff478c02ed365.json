{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/p10user/reactAp/sse-app/pages/index.js\";\n\n// class Page extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             stars: props.stars\n//         }\n//     }\n//     handleRefresh = async(e) => {\n//         const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//         const json = await res.json()\n//         this.setState({ stars: json.stargazers_count });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 Next stars: {this.state.stars}\n//                 <button onClick={this.handleRefresh}>Refresh</button>\n//             </div>\n//         )\n//     }\n// };\n// Page.getInitialProps = async ({ req }) => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n// export default Page\nconst Index = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this), props.posts.map(dt => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: dt.flight_number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this);\n  })]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 9\n}, this); // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('https://api.spacexdata.com/v3/launches?limit=100');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Index;","map":{"version":3,"sources":["/home/p10user/reactAp/sse-app/pages/index.js"],"names":["Index","props","posts","map","dt","flight_number","getStaticProps","res","fetch","json"],"mappings":";;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACI,MAAMA,KAAK,GAAIC,KAAD,iBACV;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAGIA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiBC,EAAE,IAAI;AACtB,wBAAO;AAAA,gBAAIA,EAAE,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAFD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,C,CAWF;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAD,CAAvB;AACA,QAAMN,KAAK,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAApB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLR,IAAAA,KAAK,EAAE;AACLC,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeF,KAAf","sourcesContent":["\n\n// class Page extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             stars: props.stars\n//         }\n//     }\n//     handleRefresh = async(e) => {\n//         const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//         const json = await res.json()\n//         this.setState({ stars: json.stargazers_count });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 Next stars: {this.state.stars}\n//                 <button onClick={this.handleRefresh}>Refresh</button>\n//             </div>\n//         )\n//     }\n// };\n\n// Page.getInitialProps = async ({ req }) => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n\n// export default Page\n    const Index = (props) => (\n        <div>\n            <p>hi</p>\n            {\n            props.posts.map( dt => {\n             return <p>{dt.flight_number}</p>\n            })\n            }\n        </div>\n    );\n  \n  // This function gets called at build time on server-side.\n  // It won't be called on client-side, so you can even do\n  // direct database queries. See the \"Technical details\" section.\n  export async function getStaticProps() {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await fetch('https://api.spacexdata.com/v3/launches?limit=100')\n    const posts = await res.json()\n  \n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n      props: {\n        posts,\n      },\n    }\n  }\n  \n  export default Index"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/p10user/reactAp/sse-app/pages/index.js\",\n    _this = this;\n\n// class Page extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             stars: props.stars\n//         }\n//     }\n//     handleRefresh = async(e) => {\n//         const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//         const json = await res.json()\n//         this.setState({ stars: json.stargazers_count });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 Next stars: {this.state.stars}\n//                 <button onClick={this.handleRefresh}>Refresh</button>\n//             </div>\n//         )\n//     }\n// };\n// Page.getInitialProps = async ({ req }) => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n// export default Page;\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\n\nvar Index = function Index() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello Next.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Index;\nexport default Index; //   // This function gets called at build time on server-side.\n//   // It won't be called on client-side, so you can even do\n//   // direct database queries. See the \"Technical details\" section.\n//   export async function getStaticProps() {\n//     // Call an external API endpoint to get posts.\n//     // You can use any data fetching library\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const posts = await res.json()\n//     // By returning { props: posts }, the Blog component\n//     // will receive `posts` as a prop at build time\n//     return {\n//       props: {\n//         posts,\n//       },\n//     }\n//   }\n//   export default Blog\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/p10user/reactAp/sse-app/pages/index.js"],"names":["fetch","React","Component","Index"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,sBACV;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADU;AAAA,CAAd;;KAAMA,K;AAKJ,eAAeA,KAAf,C,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\n\n// class Page extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             stars: props.stars\n//         }\n//     }\n//     handleRefresh = async(e) => {\n//         const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//         const json = await res.json()\n//         this.setState({ stars: json.stargazers_count });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 Next stars: {this.state.stars}\n//                 <button onClick={this.handleRefresh}>Refresh</button>\n//             </div>\n//         )\n//     }\n// };\n\n// Page.getInitialProps = async ({ req }) => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n\n// export default Page;\n\nimport fetch from 'isomorphic-unfetch';\nimport React,{Component} from 'react';\n\nconst Index = () => (\n    <div>\n      <p>Hello Next.js</p>\n    </div>\n  );\n  export default Index\n  \n//   // This function gets called at build time on server-side.\n//   // It won't be called on client-side, so you can even do\n//   // direct database queries. See the \"Technical details\" section.\n//   export async function getStaticProps() {\n//     // Call an external API endpoint to get posts.\n//     // You can use any data fetching library\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const posts = await res.json()\n  \n//     // By returning { props: posts }, the Blog component\n//     // will receive `posts` as a prop at build time\n//     return {\n//       props: {\n//         posts,\n//       },\n//     }\n//   }\n  \n//   export default Blog"]},"metadata":{},"sourceType":"module"}
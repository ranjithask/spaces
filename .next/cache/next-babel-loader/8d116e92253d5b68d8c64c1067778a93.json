{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/p10user/reactAp/sse-app/pages/index.js\",\n    _this = this;\n\n// class Page extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             stars: props.stars\n//         }\n//     }\n//     handleRefresh = async(e) => {\n//         const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//         const json = await res.json()\n//         this.setState({ stars: json.stargazers_count });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 Next stars: {this.state.stars}\n//                 <button onClick={this.handleRefresh}>Refresh</button>\n//             </div>\n//         )\n//     }\n// };\n// Page.getInitialProps = async ({ req }) => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n// export default Page;\nimport React, { Component } from 'react';\n\nvar Index = function Index(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.map(function (dt) {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: dt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/p10user/reactAp/sse-app/pages/index.js"],"names":["React","Component","Index","props","map","dt"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,sBACV;AAAA,cACKA,KAAK,CAACC,GAAN,CAAU,UAAAC,EAAE,EAAE;AACb;AAAA;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AACD,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,WADU;AAAA,CAAd,C,CAQE;AACA;AACA;;;KAVIH,K;;AA0BJ,eAAeA,KAAf","sourcesContent":["\n\n// class Page extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             stars: props.stars\n//         }\n//     }\n//     handleRefresh = async(e) => {\n//         const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//         const json = await res.json()\n//         this.setState({ stars: json.stargazers_count });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 Next stars: {this.state.stars}\n//                 <button onClick={this.handleRefresh}>Refresh</button>\n//             </div>\n//         )\n//     }\n// };\n\n// Page.getInitialProps = async ({ req }) => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n\n// export default Page;\n\nimport fetch from 'isomorphic-unfetch';\nimport React,{Component} from 'react';\n\nconst Index = (props) => (\n    <div>\n        {props.map(dt=>{\n          <p>{dt}</p>\n        })}\n    </div>\n  );\n  \n  // This function gets called at build time on server-side.\n  // It won't be called on client-side, so you can even do\n  // direct database queries. See the \"Technical details\" section.\n  export async function getStaticProps() {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await fetch('https://api.github.com/repos/zeit/next.js')\n    const posts = await res.json()\n  \n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n      props: {\n        posts,\n      },\n    }\n  }\n  \n  export default Index"]},"metadata":{},"sourceType":"module"}